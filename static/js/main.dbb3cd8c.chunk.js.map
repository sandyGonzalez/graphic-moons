{"version":3,"sources":["config/Api.js","config/constants.js","components/Chart/index.js","components/Card/index.js","App.js","index.js"],"names":["axios","create","baseURL","green","blue","yellow","Chart","name","count","text1","text2","percentage1","percentage2","color","className","ChartDonut","constrainToVisibleArea","data","x","y","donutOrientation","height","subTitle","subTitlePosition","title","ariaTitle","themeColor","ChartThemeColor","cyan","gold","black","chartColor","width","Card","number1","number2","colorCard","side","App","useState","setData","getData","a","getDataApi","get","res","results","useEffect","map","element","chart","Number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbb3cd8c.chunk.js","sourcesContent":["\n    import axios from \"axios\";\n     \n    export default axios.create({\n      baseURL: \"data.json\"\n    });\n","export const green = 'green';\nexport const blue = 'blue';\nexport const yellow = 'yellow'","import React from 'react'\nimport { ChartDonut, ChartThemeColor} from '@patternfly/react-charts';\nimport { green, blue, yellow } from '../../config/constants';\nimport './style.css';\n\n\n  const Chart = ({name, count, text1, text2, percentage1, percentage2, color}) => {\n    const chartColor = (color) => {\n      switch (color) {\n        case green:\n          return ChartThemeColor.green;\n        case blue:\n          return ChartThemeColor.cyan;\n        case yellow:\n          return ChartThemeColor.gold;\n        default:\n          return ChartThemeColor.black;\n      }\n    };\n\n     return(\n      <div className=\"chart-container\">\n          <ChartDonut\n        constrainToVisibleArea={true}\n        data={[{},{},{ x: text2, y: percentage2 },{ x: text1 , y: percentage1},]}\n        donutOrientation=\"top\"\n        height={275}\n        subTitle = {name}\n        subTitlePosition=\"center\"\n        title={count}\n        ariaTitle=\"bottom\"\n        themeColor={chartColor(color)}\n        width={250}\n      />  \n      </div>\n    )\n  }\n\n  export default Chart","import React from 'react';\nimport Chart from '../Chart/index';\nimport { green, blue, yellow } from '../../config/constants';\nimport './style.css';\n\n\nconst Card = ({name, count, text1, text2, percentage1, percentage2, number1, number2, color}) => {\n    const colorCard = (side, color) => {\n      switch (color) {\n        case green:\n          return `${side}-${green}`;\n        case blue:\n          return `${side}-${blue}`;\n        case yellow:\n          return `${side}-${yellow}`;\n        default:\n          return \"\";\n      }\n    };\n    return (\n      <div className=\"card-container\">\n        <div className=\"card-content\">\n          <Chart\n            name={name}\n            count={count}\n            text1={text1}\n            text2={text2}\n            percentage1={percentage1}\n            percentage2={percentage2}\n            color={color}\n          />\n          <div className=\"card-info\">\n            <div className={colorCard(\"left\", color)}>\n              <strong> {text1} </strong>\n              <p className=\"amount\">\n                <strong className=\"card-percentage\">{percentage1}% </strong>\n                &nbsp; {number1}\n              </p>\n            </div>\n\n            <div className={colorCard(\"right\", color)}>\n              <strong> {text2} </strong>\n              <p className=\"amount\">\n                <strong className=\"card-percentage\">{percentage2}% </strong>{\" \"}\n                &nbsp; {number2}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n    \n}\n\nexport default Card","import React, { useState, useEffect } from \"react\";\nimport getDataApi from './config/Api';\nimport Card from \"./components/Card/index\";\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const getData = async() => {\n    const res = await getDataApi.get(\"\",{});\n    setData(res.data.results);\n    return res\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n \n  return (\n    <div className=\"App\">\n      {data.map((element) => {\n            const {name, count, text1, text2, percentage1, percentage2,number1,number2, color} = element.chart;\n       return (\n        <Card\n          name={name}\n          count={count}\n          text1={text1}\n          text2={text2}\n          percentage1={Number(percentage1)}\n          percentage2={Number(percentage2)}\n          number1={number1}\n          number2={number2}\n          color={color}\n        />\n      )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}