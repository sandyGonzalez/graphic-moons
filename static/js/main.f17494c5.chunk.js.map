{"version":3,"sources":["config/Api.js","config/constants.js","components/Chart/index.js","components/Card/index.js","App.js","index.js"],"names":["axios","create","baseURL","green","blue","yellow","Chart","name","color","count","text1","text2","percentage1","percentage2","className","ChartDonut","constrainToVisibleArea","data","x","y","donutOrientation","height","subTitle","subTitlePosition","title","ariaTitle","themeColor","ChartThemeColor","cyan","gold","black","chartColor","width","Card","number1","number2","colorCard","side","App","useState","setData","getData","a","getDataApi","get","res","results","useEffect","map","element","chart","Number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,c,gBCHEC,EAAQ,QACRC,EAAO,OACPC,EAAS,S,gBCiDLC,EA7CD,SAAC,GAQR,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,YAeA,OACE,qBAAKC,UAAU,kBAAf,SACE,cAACC,EAAA,EAAD,CACEC,wBAAwB,EACxBC,KAAM,CACJ,GACA,GACA,CAAEC,EAAGP,EAAOQ,EAAGN,GACf,CAAEK,EAAGR,EAAOS,EAAGP,IAEjBQ,iBAAiB,MACjBC,OAAQ,IACRC,SAAUf,EACVgB,iBAAiB,SACjBC,MAAOf,EACPgB,UAAU,SACVC,WA7Ba,SAAClB,GAClB,OAAQA,GACN,KAAKL,EACH,OAAOwB,IAAgBxB,MACzB,KAAKC,EACH,OAAOuB,IAAgBC,KACzB,KAAKvB,EACH,OAAOsB,IAAgBE,KACzB,QACE,OAAOF,IAAgBG,OAoBXC,CAAWvB,GACvBwB,MAAO,SCiBFC,G,OAzDF,SAAC,GAUP,IATL1B,EASI,EATJA,KACAC,EAQI,EARJA,MACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,MACAC,EAKI,EALJA,MACAuB,EAII,EAJJA,QACAC,EAGI,EAHJA,QACAvB,EAEI,EAFJA,YACAC,EACI,EADJA,YAEMuB,EAAY,SAACC,EAAM7B,GACvB,OAAQA,GACN,KAAKL,EACH,MAAM,GAAN,OAAUkC,EAAV,YAAkBlC,GACpB,KAAKC,EACH,MAAM,GAAN,OAAUiC,EAAV,YAAkBjC,GACpB,KAAKC,EACH,MAAM,GAAN,OAAUgC,EAAV,YAAkBhC,GACpB,QACE,MAAO,KAGb,OACE,qBAAKS,UAAU,iBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEP,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,YAAaA,EACbC,YAAaA,IAEf,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAWsB,EAAU,OAAQ5B,GAAlC,UACE,uCAAUE,EAAV,OACA,oBAAGI,UAAU,SAAb,UACE,yBAAQA,UAAU,kBAAlB,UAAqCF,EAArC,QADF,QAEUsB,QAIZ,sBAAKpB,UAAWsB,EAAU,QAAS5B,GAAnC,UACE,uCAAUG,EAAV,OACA,oBAAGG,UAAU,SAAb,UACE,yBAAQA,UAAU,kBAAlB,UAAqCD,EAArC,QAA6D,IAD/D,QAEUsB,kB,OCHPG,MA7Cf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNtB,EADM,KACAuB,EADA,KAGPC,EAAO,uCAAG,4BAAAC,EAAA,sEACIC,EAAWC,IAAI,GAAI,IADvB,cACRC,EADQ,OAEdL,EAAQK,EAAI5B,KAAK6B,SAFH,kBAGPD,GAHO,2CAAH,qDAUb,OAJAE,qBAAU,WACRN,MACC,IAGD,qBAAK3B,UAAU,MAAf,SACGG,EAAK+B,KAAI,SAACC,GAAa,IAAD,EAWjBA,EAAQC,MATV3C,EAFmB,EAEnBA,KACAE,EAHmB,EAGnBA,MACAC,EAJmB,EAInBA,MACAC,EALmB,EAKnBA,MACAC,EANmB,EAMnBA,YACAC,EAPmB,EAOnBA,YACAqB,EARmB,EAQnBA,QACAC,EATmB,EASnBA,QACA3B,EAVmB,EAUnBA,MAEF,OACE,cAAC,EAAD,CACED,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPuB,QAASA,EACTC,QAASA,EACTvB,YAAauC,OAAOvC,GACpBC,YAAasC,OAAOtC,WCrChCuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f17494c5.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"data.json\",\n});\n","export const green = \"green\";\nexport const blue = \"blue\";\nexport const yellow = \"yellow\";\n","import React from 'react'\nimport { ChartDonut, ChartThemeColor} from '@patternfly/react-charts';\nimport { green, blue, yellow } from '../../config/constants';\nimport './style.css';\n\n\n  const Chart = ({\n    name,\n    color,\n    count,\n    text1,\n    text2,\n    percentage1,\n    percentage2,\n  }) => {\n    const chartColor = (color) => {\n      switch (color) {\n        case green:\n          return ChartThemeColor.green;\n        case blue:\n          return ChartThemeColor.cyan;\n        case yellow:\n          return ChartThemeColor.gold;\n        default:\n          return ChartThemeColor.black;\n      }\n    };\n\n    return (\n      <div className=\"chart-container\">\n        <ChartDonut\n          constrainToVisibleArea={true}\n          data={[\n            {},\n            {},\n            { x: text2, y: percentage2 },\n            { x: text1, y: percentage1 },\n          ]}\n          donutOrientation=\"top\"\n          height={275}\n          subTitle={name}\n          subTitlePosition=\"center\"\n          title={count}\n          ariaTitle=\"bottom\"\n          themeColor={chartColor(color)}\n          width={250}\n        />\n      </div>\n    );\n  };\n\n  export default Chart;","import React from \"react\";\nimport Chart from \"../Chart/index\";\nimport { green, blue, yellow } from \"../../config/constants\";\nimport \"./style.css\";\n\nconst Card = ({\n  name,\n  color,\n  count,\n  text1,\n  text2,\n  number1,\n  number2,\n  percentage1,\n  percentage2,\n}) => {\n  const colorCard = (side, color) => {\n    switch (color) {\n      case green:\n        return `${side}-${green}`;\n      case blue:\n        return `${side}-${blue}`;\n      case yellow:\n        return `${side}-${yellow}`;\n      default:\n        return \"\";\n    }\n  };\n  return (\n    <div className=\"card-container\">\n      <div className=\"card-content\">\n        <Chart\n          name={name}\n          color={color}\n          count={count}\n          text1={text1}\n          text2={text2}\n          percentage1={percentage1}\n          percentage2={percentage2}\n        />\n        <div className=\"card-info\">\n          <div className={colorCard(\"left\", color)}>\n            <strong> {text1} </strong>\n            <p className=\"amount\">\n              <strong className=\"card-percentage\">{percentage1}% </strong>\n              &nbsp; {number1}\n            </p>\n          </div>\n\n          <div className={colorCard(\"right\", color)}>\n            <strong> {text2} </strong>\n            <p className=\"amount\">\n              <strong className=\"card-percentage\">{percentage2}% </strong>{\" \"}\n              &nbsp; {number2}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport getDataApi from \"./config/Api\";\nimport Card from \"./components/Card/index\";\nimport \"./App.css\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const getData = async () => {\n    const res = await getDataApi.get(\"\", {});\n    setData(res.data.results);\n    return res;\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {data.map((element) => {\n        const {\n          name,\n          count,\n          text1,\n          text2,\n          percentage1,\n          percentage2,\n          number1,\n          number2,\n          color,\n        } = element.chart;\n        return (\n          <Card\n            name={name}\n            color={color}\n            count={count}\n            text1={text1}\n            text2={text2}\n            number1={number1}\n            number2={number2}\n            percentage1={Number(percentage1)}\n            percentage2={Number(percentage2)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}